#!/usr/bin/env php
<?php

if (is_file($autoloadFile = (__DIR__ . '/../vendor/autoload.php'))) {
	require_once($autoloadFile);
}
else if (is_file($autoloadFile = (__DIR__ . '/../../vendor/autoload.php'))) {
	require_once($autoloadFile);
}
else {
	die('could not find autoload.php');
}

use Symfony\Component\Console\Application;
use ContaoManagementApi\Console\BundlerPackCommand;
use ContaoManagementApi\Console\ConfigAllCommand;
use ContaoManagementApi\Console\ConfigDisableCommand;
use ContaoManagementApi\Console\ConfigEnableCommand;
use ContaoManagementApi\Console\ConfigGetCommand;
use ContaoManagementApi\Console\ConfigRemoveCommand;
use ContaoManagementApi\Console\ConfigSetCommand;
use ContaoManagementApi\Console\LogsFilesCommand;
use ContaoManagementApi\Console\LogsReadCommand;
use ContaoManagementApi\Console\StatusCommand;
use ContaoManagementApi\Console\SyslogEntriesCommand;
use ContaoManagementApi\Console\UserInfoCommand;
use ContaoManagementApi\Console\UserResetPasswordCommand;

$application = new Application();
$application->add(new BundlerPackCommand);
$application->add(new ConfigAllCommand);
$application->add(new ConfigDisableCommand);
$application->add(new ConfigEnableCommand);
$application->add(new ConfigGetCommand);
$application->add(new ConfigRemoveCommand);
$application->add(new ConfigSetCommand);
$application->add(new LogsFilesCommand);
$application->add(new LogsReadCommand);
$application->add(new StatusCommand);
$application->add(new SyslogEntriesCommand);
$application->add(new UserInfoCommand);
$application->add(new UserResetPasswordCommand);
$application->run();
