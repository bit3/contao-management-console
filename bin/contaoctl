#!/usr/bin/env php
<?php

/**
 * Management Console for Contao Open Source CMS
 *
 * Copyright (C) 2013 Tristan Lins
 *
 * PHP version 5
 *
 * @copyright  bit3 UG 2013
 * @author     Tristan Lins <tristan.lins@bit3.de>
 * @package    contao-management-console
 * @license    LGPL-3.0+
 * @filesource
 */

if (is_file($autoloadFile = (__DIR__ . '/../vendor/autoload.php'))) {
	require_once($autoloadFile);
}
else if (is_file($autoloadFile = (__DIR__ . '/../../../../vendor/autoload.php'))) {
	require_once($autoloadFile);
}
else {
	echo ('could not find autoload.php');
	exit(1);
}

use Symfony\Component\Console\Application;
use ContaoManagementConsole\Console\BundlerPackCommand;
use ContaoManagementConsole\Console\ConfigAllCommand;
use ContaoManagementConsole\Console\ConfigDisableCommand;
use ContaoManagementConsole\Console\ConfigEnableCommand;
use ContaoManagementConsole\Console\ConfigGetCommand;
use ContaoManagementConsole\Console\ConfigRemoveCommand;
use ContaoManagementConsole\Console\ConfigSetCommand;
use ContaoManagementConsole\Console\LogsFilesCommand;
use ContaoManagementConsole\Console\LogsReadCommand;
use ContaoManagementConsole\Console\StatusCommand;
use ContaoManagementConsole\Console\SyslogEntriesCommand;
use ContaoManagementConsole\Console\UserInfoCommand;
use ContaoManagementConsole\Console\UserResetPasswordCommand;

$application = new Application();
$application->add(new BundlerPackCommand);
$application->add(new ConfigAllCommand);
$application->add(new ConfigDisableCommand);
$application->add(new ConfigEnableCommand);
$application->add(new ConfigGetCommand);
$application->add(new ConfigRemoveCommand);
$application->add(new ConfigSetCommand);
$application->add(new LogsFilesCommand);
$application->add(new LogsReadCommand);
$application->add(new StatusCommand);
$application->add(new SyslogEntriesCommand);
$application->add(new UserInfoCommand);
$application->add(new UserResetPasswordCommand);
$application->run();
